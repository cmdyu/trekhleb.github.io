{"componentChunkName":"component---src-templates-post-tsx-content-file-path-src-posts-2017-solid-principles-around-you-index-md","path":"/blog/2017/solid-principles-around-you/","result":{"data":{"mdx":{"id":"d120d6ac-2833-5ab0-a1e4-d46ceab76fa0","body":"\n![SOLID](assets/01-cover.png)\n\nIn this article, I want to briefly go through [SOLID](https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)) principles (the acronym that stands for five basic principles of object-oriented programming and design) supplying each of them with real-world visual examples to make those principles more understandable, readable and memorizable.\n\n> If you want to see code examples instead you may take a look at [variety of tree data structure implementations](https://github.com/trekhleb/javascript-algorithms/tree/master/src/data-structures/tree) in **JavaScript** like [Binary Search Tree](https://github.com/trekhleb/javascript-algorithms/tree/master/src/data-structures/tree/binary-search-tree), [AVL Tree](https://github.com/trekhleb/javascript-algorithms/tree/master/src/data-structures/tree/avl-tree), [Red-Black Tree](https://github.com/trekhleb/javascript-algorithms/tree/master/src/data-structures/tree/red-black-tree), [Segment Tree](https://github.com/trekhleb/javascript-algorithms/tree/master/src/data-structures/tree/segment-tree) or [Fenwick Tree](https://github.com/trekhleb/javascript-algorithms/tree/master/src/data-structures/tree/fenwick-tree).\n\n> You may also check the interactive [SOLID Sketches](https://okso.app/showcase/solid)\n\nSo let’s move on!\n\n## S — Single Responsibility Principle\n\na.k.a [SRP](https://en.wikipedia.org/wiki/Single_responsibility_principle)\n\nA class should have only a single responsibility. Only one potential change in the software’s specification should be able to affect the specification of the class.\n\n![Single Responsibility Principle](assets/05.png)\n\n## O — Open/Closed Principle\n\na.k.a [OCP](https://en.wikipedia.org/wiki/Open/closed_principle)\n\nSoftware entities should be open for EXTENSION, but closed for MODIFICATION. Allow behavior to be extended without modifying the source code.\n\n![Open/Closed Principle](assets/0.png)\n\n## L — Liskov Substitution Principle\n\na.k.a. [LSP](https://en.wikipedia.org/wiki/Liskov_substitution_principle)\n\nObjects in a program should be replaceable with instances of their subtypes without altering the correctness of that program.\n\n![Liskov Substitution Principle](assets/1.png)\n\n## I — Interface Segregation Principle\n\na.k.a. [ISP](https://en.wikipedia.org/wiki/Interface_segregation_principle)\n\nMany client-specific interfaces are better than one general-purpose interface. No client should be forced to depend on methods it does not use.\n\n![Interface Segregation Principle](assets/2.png)\n\n## D — Dependency Inversion Principle\n\na.k.a. [DIP](https://en.wikipedia.org/wiki/Dependency_inversion_principle)\n\nOne should depend upon abstractions, not concretions.\n\n- High-level modules should not depend on low-level modules. Both should depend on abstractions.\n- Abstractions should not depend on details. Details should depend on abstractions.\n\n![Dependency Inversion Principle](assets/3.png)\n\nThe plug doesn’t care which type of wire it uses, it just needs wires that conduct electricity.\n\nI hope these illustrations have been useful for you :)\n","fields":{"slug":"/blog/2017/solid-principles-around-you/"},"internal":{"contentFilePath":"/home/runner/work/trekhleb.github.io/trekhleb.github.io/src/posts/2017/solid-principles-around-you/index.md"},"frontmatter":{"title":"S.O.L.I.D. Principles Around You","summary":"Real-world visual examples of SOLID principles","date":"20 June, 2017","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#98a8b8","images":{"fallback":{"src":"/static/303c04e4144fcefd42fcca7661368b5c/69b00/01-cover.png","srcSet":"/static/303c04e4144fcefd42fcca7661368b5c/9d129/01-cover.png 750w,\n/static/303c04e4144fcefd42fcca7661368b5c/a41a4/01-cover.png 1080w,\n/static/303c04e4144fcefd42fcca7661368b5c/10a46/01-cover.png 1366w,\n/static/303c04e4144fcefd42fcca7661368b5c/69b00/01-cover.png 1920w","sizes":"100vw"},"sources":[{"srcSet":"/static/303c04e4144fcefd42fcca7661368b5c/d7781/01-cover.webp 750w,\n/static/303c04e4144fcefd42fcca7661368b5c/75041/01-cover.webp 1080w,\n/static/303c04e4144fcefd42fcca7661368b5c/95712/01-cover.webp 1366w,\n/static/303c04e4144fcefd42fcca7661368b5c/1cc3f/01-cover.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.36875}}}}}},"pageContext":{"slug":"/blog/2017/solid-principles-around-you/","frontmatter":{"title":"S.O.L.I.D. Principles Around You","summary":"Real-world visual examples of SOLID principles","cover":"assets/01-cover.png","date":"2017-06-20T00:00:00.000Z"}}},"staticQueryHashes":[],"slicesMap":{}}