{"version":3,"file":"component---src-templates-project-tsx-af1bff905e0153a4fc01.js","mappings":"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","sources":["webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/bi/BiLink.js","webpack://trekhleb.github.io/./src/components/elements/ProjectAchievement.tsx","webpack://trekhleb.github.io/./src/components/elements/ProjectAchievements.tsx","webpack://trekhleb.github.io/./src/components/elements/Project.tsx","webpack://trekhleb.github.io/./src/components/screens/ProjectScreen.tsx","webpack://trekhleb.github.io/./src/templates/Project.tsx"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\nmodule.exports.BiLink = function BiLink(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 24 24\"\n    },\n    \"child\": [{\n      \"tag\": \"path\",\n      \"attr\": {\n        \"d\": \"M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z\"\n      }\n    }, {\n      \"tag\": \"path\",\n      \"attr\": {\n        \"d\": \"M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z\"\n      }\n    }]\n  })(props);\n};","import React from 'react';\nimport { BiLink } from '@react-icons/all-files/bi/BiLink';\n\nimport { Achievement } from '../../types/Achievement';\nimport Card from '../shared/Card';\nimport CardMedia from '../shared/CardMedia';\nimport { useFluidCover } from '../../hooks/useFluidCover';\nimport FluidImage from '../shared/FluidImage';\nimport CardContent from '../shared/CardContent';\nimport HyperLink from '../shared/HyperLink';\nimport { Link } from '../../types/Link';\nimport DateRange from '../shared/DateRange';\n\ntype ProjectAchievementsProps = {\n  achievement: Achievement | null | undefined,\n};\n\nconst ProjectAchievement = (props: ProjectAchievementsProps): React.ReactElement | null => {\n  const { achievement } = props;\n\n  const fluidImageFetched = useFluidCover({ imagePath: achievement?.image?.srcPath });\n\n  if (!achievement) {\n    return null;\n  }\n\n  const date = achievement?.date ? (\n    <div className=\"mt-3\">\n      <DateRange\n        startDate={achievement.date}\n        className=\"text-xs text-gray-500\"\n        withDay\n      />\n    </div>\n  ) : null;\n\n  const imageLink: Link = {\n    url: fluidImageFetched?.src,\n  };\n\n  const detailsLink = achievement.link ? (\n    <div className=\"mt-3\">\n      <HyperLink\n        link={achievement.link}\n        className=\"text-sm underline\"\n        startEnhancer={(<BiLink size={16} />)}\n      >\n        {achievement.link?.caption || 'Details'}\n      </HyperLink>\n    </div>\n  ) : null;\n\n  return (\n    <Card key={achievement.title}>\n      <CardMedia link={imageLink}>\n        <FluidImage fluidImage={fluidImageFetched} />\n      </CardMedia>\n      <CardContent>\n        <HyperLink link={imageLink}>\n          {achievement.title}\n        </HyperLink>\n        {date}\n        {detailsLink}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ProjectAchievement;\n","import React from 'react';\n\nimport { Achievement } from '../../types/Achievement';\nimport H, { hLevel } from '../shared/H';\nimport Row from '../shared/Row';\nimport Badge from '../shared/Badge';\nimport Cards from '../shared/Cards';\nimport ProjectAchievement from './ProjectAchievement';\n\ntype ProjectAchievementsProps = {\n  achievements: Achievement[] | null | undefined,\n};\n\nconst ProjectAchievements = (props: ProjectAchievementsProps): React.ReactElement | null => {\n  const { achievements } = props;\n\n  if (!achievements || !achievements.length) {\n    return null;\n  }\n\n  const achievementsItems = achievements.map((achievement: Achievement, idx: number) => {\n    return (\n      <ProjectAchievement\n        achievement={achievement}\n        // eslint-disable-next-line react/no-array-index-key\n        key={idx}\n      />\n    );\n  });\n\n  return (\n    <div className=\"mt-6 mb-6\">\n      <Row className=\"mb-3\">\n        <H level={hLevel.h2} id=\"achievements\">\n          Achievements\n        </H>\n        <Badge className=\"ml-3 self-start\">\n          {achievements.length}\n        </Badge>\n      </Row>\n      <Cards>\n        {achievementsItems}\n      </Cards>\n    </div>\n  );\n};\n\nexport default ProjectAchievements;\n","import React from 'react';\nimport { IoPlay } from '@react-icons/all-files/io5/IoPlay';\nimport { FaGithub } from '@react-icons/all-files/fa/FaGithub';\nimport { BiInfoCircle } from '@react-icons/all-files/bi/BiInfoCircle';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport DateRange from '../shared/DateRange';\nimport Card from '../shared/Card';\nimport CardMedia from '../shared/CardMedia';\nimport Tags from '../shared/Tags';\nimport FluidImage from '../shared/FluidImage';\nimport ButtonLink from '../shared/ButtonLink';\nimport Archived from '../shared/Archived';\nimport Stars from '../shared/Stars';\nimport Row from '../shared/Row';\nimport { getGitHubProjectStars } from '../../utils/project';\nimport { Link } from '../../types/Link';\nimport HyperLink from '../shared/HyperLink';\nimport ProjectAchievements from './ProjectAchievements';\n\ntype ProjectProps = {\n  project: ProjectType | null,\n};\n\nconst tagsPerProject = 5;\n\nconst Project = (props: ProjectProps): React.ReactElement | null => {\n  const { project } = props;\n\n  if (!project) {\n    return null;\n  }\n\n  const projectTags = project?.tags ? (\n    <div>\n      <Tags tags={project.tags} numToShow={tagsPerProject} />\n    </div>\n  ) : null;\n\n  const projectDates = (\n    <DateRange\n      startDate={project.startDate}\n      endDate={project.endDate}\n      className=\"text-xs text-gray-500\"\n    />\n  );\n\n  const projectStars = getGitHubProjectStars(project);\n  const projectStarsLink: Link = {\n    url: project?.srcURL?.url,\n    caption: 'Stars on GitHub',\n  };\n  const stars = typeof projectStars === 'number' ? (\n    <Stars\n      stars={projectStars}\n      link={projectStarsLink}\n      className=\"text-xs text-gray-500 font-light\"\n    />\n  ) : null;\n\n  /* eslint-disable react/no-array-index-key */\n  const projectSummaryLines = project.summary ? project.summary.map(\n    (summaryLine: string | null, index: number) => (\n      <p key={index}>\n        {summaryLine}\n      </p>\n    ),\n  ) : null;\n\n  const projectSummary = projectSummaryLines ? (\n    <div className=\"mb-3 font-light\">\n      {projectSummaryLines}\n    </div>\n  ) : null;\n\n  const defaultProjectUrl = project.archived ? undefined : project.demoURL || project.srcURL;\n\n  const demoLink = project.demoURL && !project.archived ? (\n    <ButtonLink\n      link={project.demoURL}\n      startEnhancer={<IoPlay />}\n      className=\"mr-4\"\n    >\n      Demo\n    </ButtonLink>\n  ) : null;\n\n  const sourceCodeLink = project.srcURL && !project.archived ? (\n    <ButtonLink\n      link={project.srcURL}\n      startEnhancer={<FaGithub />}\n    >\n      Source Code\n    </ButtonLink>\n  ) : null;\n\n  const projectCover = project.cover ? (\n    <FluidImage image={project.cover} />\n  ) : null;\n\n  const projectCoverCard = (\n    <div className=\"mb-6\">\n      <Card>\n        <CardMedia link={defaultProjectUrl} className=\"h-96\">\n          {projectCover}\n        </CardMedia>\n      </Card>\n    </div>\n  );\n\n  const archivedStamp = project?.archived ? (\n    <Row className=\"py-6\">\n      <Archived />\n    </Row>\n  ) : null;\n\n  const actions = demoLink || sourceCodeLink ? (\n    <Row className=\"py-6\">\n      {demoLink}\n      {sourceCodeLink}\n    </Row>\n  ) : null;\n\n  const extraLinksList = project?.links && project?.links.length\n    ? project?.links.map((extraLink: Link, linkIndex) => {\n      return (\n        <li key={linkIndex}>\n          <HyperLink\n            link={extraLink}\n            className=\"text-sm underline\"\n            startEnhancer={(<BiInfoCircle size={14} />)}\n          >\n            {extraLink?.caption || 'Read more'}\n          </HyperLink>\n        </li>\n      );\n    })\n    : null;\n\n  const externalLinks = extraLinksList ? (\n    <ul className=\"mt-3\">\n      {extraLinksList}\n    </ul>\n  ) : null;\n\n  const projectDatesAndStars = (\n    <Row className=\"mb-3 justify-between\">\n      <div>\n        {projectDates}\n      </div>\n      <div>\n        {stars}\n      </div>\n    </Row>\n  );\n\n  const projectAchievements = (\n    <ProjectAchievements\n      achievements={project?.achievements}\n    />\n  );\n\n  return (\n    <>\n      {projectCoverCard}\n      {projectDatesAndStars}\n      {projectSummary}\n      {projectTags}\n      {externalLinks}\n      {actions}\n      {archivedStamp}\n      {projectAchievements}\n    </>\n  );\n};\n\nexport default Project;\n","import React from 'react';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport PageLayout from '../layouts/PageLayout';\nimport PageHeader from '../shared/PageHeader';\nimport SEO from '../shared/SEO';\nimport Alert, { ErrorAlert } from '../shared/Alert';\nimport Project from '../elements/Project';\nimport Row from '../shared/Row';\nimport Badge from '../shared/Badge';\n\ntype ProjectScreenProps = {\n  project: ProjectType | null,\n};\n\nconst ProjectScreen = (props: ProjectScreenProps): React.ReactElement => {\n  const { project } = props;\n\n  if (!project) {\n    return (\n      <Alert type={ErrorAlert}>\n        Project not found\n      </Alert>\n    );\n  }\n\n  return (\n    <PageLayout>\n      <SEO\n        title={project?.name || ''}\n        description={project?.summary && project?.summary.length ? project.summary[0] : ''}\n      />\n      <Row>\n        <PageHeader>{project.name}</PageHeader>\n        <Badge className=\"ml-3 self-start\">project</Badge>\n      </Row>\n      <Project project={project} />\n    </PageLayout>\n  );\n};\n\nexport default ProjectScreen;\n","import * as React from 'react';\nimport { PageProps } from 'gatsby';\nimport ProjectScreen from '../components/screens/ProjectScreen';\nimport { projects } from '../data/projects';\nimport { ProjectID, Project as ProjectType } from '../types/Project';\n\ninterface ProjectProps extends PageProps {\n  pageContext: {\n    projectID: ProjectID,\n  },\n}\n\nconst Project = (props: ProjectProps): React.ReactElement => {\n  const { pageContext } = props;\n  const { projectID = null } = pageContext;\n\n  const project: ProjectType | null = projectID && (projectID in projects)\n    ? projects[projectID]\n    : null;\n\n  return (\n    <ProjectScreen project={project} />\n  );\n};\n\nexport default Project;\n"],"names":["GenIcon","module","exports","props","_achievement$image","_achievement$link","achievement","fluidImageFetched","useFluidCover","imagePath","image","srcPath","date","React","className","DateRange","startDate","withDay","imageLink","url","src","detailsLink","link","HyperLink","startEnhancer","BiLink","size","caption","Card","key","title","CardMedia","FluidImage","fluidImage","CardContent","achievements","length","achievementsItems","map","idx","ProjectAchievement","Row","H","level","hLevel","id","Badge","Cards","_project$srcURL","project","projectTags","tags","Tags","numToShow","projectDates","endDate","projectStars","getGitHubProjectStars","projectStarsLink","srcURL","stars","Stars","projectSummaryLines","summary","summaryLine","index","projectSummary","defaultProjectUrl","archived","undefined","demoURL","demoLink","ButtonLink","IoPlay","sourceCodeLink","FaGithub","projectCover","cover","projectCoverCard","archivedStamp","Archived","actions","extraLinksList","links","extraLink","linkIndex","BiInfoCircle","externalLinks","projectDatesAndStars","projectAchievements","ProjectAchievements","PageLayout","SEO","name","description","PageHeader","Project","Alert","type","ErrorAlert","pageContext","projectID","projects","ProjectScreen"],"sourceRoot":""}